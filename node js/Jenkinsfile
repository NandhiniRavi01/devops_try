pipeline {
    agent any
    environment {
        SUDO_PASSWORD = credentials('sudo-credentials')  // Replace 'sudo-credentials' with your Jenkins credential ID
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([$class: 'GitSCM', 
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[url: 'https://github.com/NandhiniRavi01/devops_try', 
                                         credentialsId: 'git-credential']]  // Replace with Git credentials ID
                ])
            }
        }

        stage('Use sudo') {
            steps {
                withCredentials([string(credentialsId: 'sudo-credentials', variable: 'SUDO_PASSWORD')]) {
                    sh '''
                        echo $SUDO_PASSWORD | sudo -S whoami  # Test sudo access
                    '''
                }
            }
        }

        stage('Install Node.js') {
            steps {
                withCredentials([string(credentialsId: 'sudo-credentials', variable: 'SUDO_PASSWORD')]) {
                    sh '''
                        echo $SUDO_PASSWORD | sudo -S rm -f /var/lib/apt/lists/lock
                        echo $SUDO_PASSWORD | sudo -S rm -f /var/cache/apt/archives/lock

                        echo $SUDO_PASSWORD | sudo -S apt-get remove -y libnode-dev

                        echo $SUDO_PASSWORD | sudo -S curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
                        echo $SUDO_PASSWORD | sudo -S apt-get install -y nodejs
                    '''
                }
            }
        }

        stage('Verify Node.js Installation') {
            steps {
                sh 'node -v'
                sh 'npm -v'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build -t nodejs-app .'
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    sh 'docker run -d -p 3000:3000 nodejs-app'
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline complete.'
        }
    }
}

pipeline {
    agent any

    environment {
        IMAGE_TAG = "v9"
        LOCAL_REGISTRY = "gcr.io/white-welder-432609-t7"
        ARGOCD_SERVER = "https://35.196.239.185:8081" // Ensure the URL is correct
        GOOGLE_APPLICATION_CREDENTIALS = '/tmp/gcloud-key.json'
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'git-credential', 
                    url: 'https://github.com/NandhiniRavi01/devops_try',
                    branch: 'main'
            }
        }
        
        stage('Setup Google Cloud') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'google-credentials', variable: 'GCLOUD_KEY_FILE')]) {
                        sh '''
                        echo "GCLOUD_KEY_FILE is set to $GCLOUD_KEY_FILE"
                        ls -l $GCLOUD_KEY_FILE

                        echo "Checking /tmp permissions"
                        ls -ld /tmp

                        echo "Testing write access"
                        touch /tmp/testfile
                        rm /tmp/testfile

                        echo "Copying Google Cloud key to /tmp"
                        cp $GCLOUD_KEY_FILE /tmp/gcloud-key.json

                        echo "Listing files in /tmp after copy"
                        ls -l /tmp
                        cat /tmp/gcloud-key.json | head -n 20 # Print the first 20 lines for validation
                        '''
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh '''
                    echo "Building Docker image"
                    docker build -t gcr.io/white-welder-432609-t7/python-app:v9 -f sample/Dockerfile .
                    '''
                }
            }
        }

        stage('Push Docker Image to Local Registry') {
            steps {
                script {
                    withCredentials([file(credentialsId: 'google-credentials', variable: 'GCLOUD_KEY_FILE')]) {
                        sh '''
                        echo "Authenticating with Google Cloud"
                        gcloud auth activate-service-account --key-file=/tmp/gcloud-key.json
                        gcloud auth configure-docker

                        echo "Pushing Docker image"
                        docker push gcr.io/white-welder-432609-t7/python-app:v9
                        '''
                    }
                }
            }
        }

        stage('Deploy to Kubernetes using ArgoCD') {
            steps {
                script {
                    sh '''
                    echo "Authenticating with ArgoCD"
                    argocd login ${ARGOCD_SERVER} --username admin --password ncKin-XiDzlA9s9e --insecure

                    echo "Deploying to Kubernetes using ArgoCD"
                    argocd app sync argocd/sample
                    argocd app wait argocd/sample --timeout 300
                    '''
                }
            }
        }
    }

    post {
        always {
            echo "Cleaning up"
            sh 'rm -f /tmp/gcloud-key.json'
        }
    }
}
